// Daniel Shiffman
// http://codingtra.in
// http://patreon.com/codingtrain
// Code for: https://youtu.be/17WoOqgXsRM
//edited to work with kinect depth

import org.openkinect.freenect.*;
import org.openkinect.freenect2.*;
import org.openkinect.processing.*;
import org.openkinect.tests.*;

// I create an array named "stars",
// it will be filled with 800 elements made with the Star() class.
Star[] stars = new Star[800];

// I create a variable "speed", it'll be useful to control the speed of stars.
float speed;

Kinect2 kinect2;

void setup() {
  size(512, 424);
  kinect2 = new Kinect2(this);
 
  kinect2.initDepth();
  kinect2.initDevice();
  // I fill the array with a for loop;
  // running 800 times, it creates a new star using the Star() class.
  for (int i = 0; i < stars.length; i++) {
    stars[i] = new Star();
  }
}

void draw() {
  // i link the value of the speed variable to the depth image of a kinect.
  //speed = map(mouseX, 0, width, 0, 30);
 // int[] depth = kinect.getRawDepth();
  PImage img = kinect2.getDepthImage();
  int[] depth = kinect2.getRawDepth();
  
  
   for (int x = 0; x < kinect2.depthWidth; x++) {
    for (int y = 0; y < kinect2.depthHeight; y++) {
      int offset = x + y * kinect2.depthWidth;
      int d = depth[offset];
   if(d > 480 && d < 830 && x >200 && x<300 ) //if the depth is within a certain range, and the position within a certain range, change 
    speed = 0;                                //speed of stars accordingly
  else if (d > 480 && d < 830 && x >= 240 &&  x<= 360)
  {speed = 1;}
  else if( d > 480 && d < 830 && x >= 180 && x <= 410)
  { speed = 2;}
  else if(d > 480 && d < 830 && x >= 150 && x <= 450)
  {speed = 3;}
  else if(d > 480 && d < 830 && x >=100 && x <= 500)
  {speed = 5;}
  else 
  speed = 8;

    }
  }
  
 
  background(0);
  // I shift the entire composition,
  // moving its center from the top left corner to the center of the canvas.
  translate(width/2, height/2);
  // I draw each star, running the "update" method to update its position and
  // the "show" method to show it on the canvas.
  for (int i = 0; i < stars.length; i++) {
    stars[i].update();
    stars[i].show();
  }
}
